openapi: 3.0.0
info:
  title: University API
  description: This is a simple University API based on the OpenAPI 3.0 specification.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:4010/  
  - url: https://zafin-interview-dummy-host.io/api
paths:
  /university:
    description: University Information
    get:
      description: To fetch a university information
      parameters:
        - in: query
          name: universityName
          required: true
          schema:
            type: string
            example: University of Toronto
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/university'
        '400':
          description: Invalid ID supplied
        '404':
          description: University not found        
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                      
    post:
      description: To add a new universtity to the list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/university'
      responses:
        201:
          description: Record Added Successfully
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                      
    delete:
      description: To delete a university
      parameters:
        - in: query
          name: universityName
          required: true
          schema:
            type: string
            example: University of Toronto
      responses:
        204:
          description: Record Deleted Successfully
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                      
  /university{universityID}:    
    description: University Information
    get:
      parameters:
        - in: path
          name: universityID
          required: true
          schema:
            type: integer
            example: 978
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/university'
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                            
    put:
      description: To update an university information
      parameters:
      - in: path
        name: universityID
        required: true
        schema:
          type: integer
          example: 978
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/university'
      responses:
        201:
          description: Record Added Successfully
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                      
  /universities:
    description: All universities information
    get:
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/universities'
      security:
        - api_key: [f3c84cbb-1f9a-4b87-bb5b-2d1691b24e1e]                  
components:
  schemas:
    university:
      type: object
      properties:
        UniversityID:
          type: integer
          example: 978
        UniversityName:
          type: string
          example: University of Toronto
        UniversityLocation:
          type: string
          example: Toronto, Ontario, Canada
        UniversityFounded:
          type: integer
          example: 1965
        KeyPeople:
          type: array
          items:
            properties:
              name:
                type: string
                example: John Smith
              age:
                type: integer
                example: 45
              title:
                type: string
                example: President
    universities:
      type: array
      items:
        properties:
          UniversityID:
            type: integer
            example: 978
          UniversityName:
            type: string
            example: University of Toronto
          UniversityLocation:
            type: string
            example: Toronto, Ontario, Canada
          UniversityFounded:
            type: integer
            example: 1965
          KeyPeople:
            type: array
            items:
              properties:
                name:
                  type: string
                  example: John Smith
                age:
                  type: integer
                  example: 45
                title:
                  type: string
                  example: President
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header          
          
        